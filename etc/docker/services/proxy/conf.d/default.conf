# Определяем нужно ли выключить кеш для текущего запроса (0 - кеш включен, 1 - кеш выключен)
map $request_uri $nocache
{
        default 0;
        ~^\/wp-admin\/ 1;
        ~^\/wp-.*.php 1;
        ~^\/login 1;
        ~^\/admin 1;
}

# Настраиваем хранилище для кеша
proxy_cache_path /var/run/nginx-cache levels=1:2 keys_zone=main_zone:5m max_size=100m;
# Не берем ответ из кеша, если требуется
proxy_cache_bypass $nocache;
# Не сохраняем ответ в кеш, если требуется
proxy_no_cache $nocache;
# Добавляем заголовок с информацией о том, попали ли мы в кеш
add_header X-Proxy-Cache $upstream_cache_status;
# 1 минута на ответы с остальными кодами
proxy_cache_valid any      1m;
# Указываем из чего состоит ключ
proxy_cache_key "$request_method$scheme$host$request_uri";
# отдаем сатрый кеш, если новый ответ не может быть сформирован
proxy_cache_use_stale timeout invalid_header http_500 http_502;
# не учитываем правила кеширования от клиента
proxy_ignore_headers Cache-Control Expires;

server
{
    listen 80;

    charset utf-8;

    proxy_cache main_zone;
    proxy_set_header Host $host;

    location =/ {
        # 15 минут для главной страницы
        proxy_cache_valid 200 302 301 15m;
        proxy_pass http://nginx;
    }

    location /category/ {
        # 15 минут для страниц категорий
        proxy_cache_valid 200 302 301 15m;
        proxy_pass http://nginx;
    }

    location / {
        # 1 час на остальные страницы
        proxy_cache_valid 200 302 301 1h;
        proxy_pass http://nginx;
    }

    location ~ /purge(/.*) {
        proxy_cache_purge main_zone "$request_method$scheme$host$1";
    }
}